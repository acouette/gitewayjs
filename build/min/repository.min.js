var giteway=giteway||{};giteway.models=giteway.models||{},giteway.collections=giteway.collections||{},function(){"use strict";var e="https://api.github.com",t="/repos/:owner/:repo",o="/commits",i=Backbone.Model.extend({}),n=Backbone.Collection.extend({model:i,search:function(i,n){this.url=e+t.replace(":owner",i).replace(":repo",n)+o,this.fetch({dataType:"jsonp"})},parse:function(e){return e.data}});giteway.models.Repository=Backbone.Model.extend({defaults:{commits:new n,view:"timeline"},initialize:function(){this.get("commits").search(this.get("owner"),this.get("name"))},collaboration:function(){var e={count:this.get("commits").length},t=100/e.count;return e.data=this.get("commits").map(function(e){return e.get("author")?e.get("author").login:void 0}).reduce(function(e,o){return o in e?e[o]+=t:e[o]=t,e},{}),e},timeline:function(){var e=this.get("commits").map(function(e){return e.get("commit")&&e.get("commit").committer&&e.get("commit").committer.date?new Date(Date.parse(e.get("commit").committer.date)).getTime():void 0}),t=Math.max.apply(null,e),o=Math.min.apply(null,e),i=t-o,n=i/10,a={range:i,step:n,count:e.length};return a.data=e.reduce(function(e,t){for(var i=o;t>i+n;)i+=n;return e[i]=e[i]||0,e[i]++,e},{}),a}})}();